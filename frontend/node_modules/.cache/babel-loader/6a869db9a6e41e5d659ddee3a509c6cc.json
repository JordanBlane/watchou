{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/watchou/frontend/src/upload.js\";\nimport React from 'react';\nimport './CSS/upload.css';\nconst hostname = window.location.hostname;\nexport class UploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.upload = e => {\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        console.log(e.target.result);\n        var message = {\n          data: e.target.result,\n          token: process.env.REACT_APP_SECRET_TOKEN_CODE\n        };\n        var cipher = cryptoJs.AES.encrypt(JSON.stringify(message), process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n        cipher = cipher.replace(/[/]/g, '★');\n        cipher = cipher.replace(/[+]/g, '☆');\n        fetch(`http://${hostname}:4000/api/upload?data=${cipher}`);\n      };\n\n      console.log(file);\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"uploadPageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: e => this.upload(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/watchou/frontend/src/upload.js"],"names":["React","hostname","window","location","UploadPage","Component","constructor","props","upload","e","file","target","files","reader","FileReader","readAsDataURL","onload","console","log","result","message","data","token","process","env","REACT_APP_SECRET_TOKEN_CODE","cipher","cryptoJs","AES","encrypt","JSON","stringify","toString","replace","fetch","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC;AAGA,OAAO,MAAMG,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,MARkB,GAQRC,CAAD,IAAO;AACZ,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AAEA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBL,IAAI,CAAC,CAAD,CAAzB;;AAEAG,MAAAA,MAAM,CAACG,MAAP,GAAiBP,CAAD,IAAO;AACnBQ,QAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAACE,MAAF,CAASQ,MAArB;AACA,YAAIC,OAAO,GAAG;AAACC,UAAAA,IAAI,EAACZ,CAAC,CAACE,MAAF,CAASQ,MAAf;AAAsBG,UAAAA,KAAK,EAACC,OAAO,CAACC,GAAR,CAAYC;AAAxC,SAAd;AACA,YAAIC,MAAM,GAAGC,QAAQ,CAACC,GAAT,CAAaC,OAAb,CAAqBC,IAAI,CAACC,SAAL,CAAeX,OAAf,CAArB,EAA6CG,OAAO,CAACC,GAAR,CAAYC,2BAAzD,EAAsFO,QAAtF,EAAb;AACAN,QAAAA,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAe,MAAf,EAAsB,GAAtB,CAAT;AACAP,QAAAA,MAAM,GAAGA,MAAM,CAACO,OAAP,CAAe,MAAf,EAAsB,GAAtB,CAAT;AACAC,QAAAA,KAAK,CAAE,UAASjC,QAAS,yBAAwByB,MAAO,EAAnD,CAAL;AACH,OAPD;;AASAT,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACH,KAxBiB;;AAGhB,SAAKyB,KAAL,GAAW,EAAX;AAGD;;AAqBDC,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAG3B,CAAD,IAAK,KAAKD,MAAL,CAAYC,CAAZ,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMD;;AApC6C","sourcesContent":["import React from 'react';\nimport './CSS/upload.css'\nconst hostname = window.location.hostname;\n\n\nexport class UploadPage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n    }\n\n  }\n\n  upload = (e) => {\n      var file = e.target.files\n\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0])\n\n      reader.onload = (e) => {\n          console.log(e.target.result)\n          var message = {data:e.target.result,token:process.env.REACT_APP_SECRET_TOKEN_CODE}\n          var cipher = cryptoJs.AES.encrypt(JSON.stringify(message),process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n          cipher = cipher.replace(/[/]/g,'★')\n          cipher = cipher.replace(/[+]/g,'☆')\n          fetch(`http://${hostname}:4000/api/upload?data=${cipher}`)\n      }\n\n      console.log(file)\n  }\n\n\n  render(){\n    return(\n        <div className=\"uploadPageWrapper\">\n            <h1>Upload</h1>\n            <input type='file' id='fileInput' onChange={(e)=>this.upload(e)}/>\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}