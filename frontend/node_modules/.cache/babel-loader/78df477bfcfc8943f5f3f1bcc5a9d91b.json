{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/ccw/frontend/src/messages.js\";\nimport React from 'react';\nimport './CSS/messages.css';\nconst hostname = window.location.hostname;\nexport class MessagePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendmessage = () => {\n      let sendto = this.state.currentMessage;\n      let message = document.getElementById('messageinput').value;\n\n      if (sendto !== '') {\n        fetch(`http://${hostname}:4000/api/sendmessage?sendto=${sendto}&username=${this.state.profile.username}&message=${message}`).then(response => response.json()).then(data => {});\n      }\n    };\n\n    this.getmessage = () => {\n      let sendto = this.state.currentMessage;\n\n      if (sendto !== \"\") {\n        fetch(`http://${hostname}:4000/api/getmessages?to=${sendto}&username=${this.state.profile.username}`).then(response => response.json()).then(data => {\n          if (data.data != 'false') {\n            for (let i = 0; i < data.data.message.length; i++) {\n              let name = data.data.message[i].split(\"℗\")[0];\n              let text = data.data.message[i].split(\"℗\")[1];\n              fetch(`http://${hostname}:4000/api/profile?name=${name}`).then(response => response.json()).then(data => {\n                let messageTemplate = `<div id=\"messagecontainer\"><img id=\"messageavatar\"src=\"${data.data[0].avatar}\"/><p class=\"messageName\">${name}</p><p class=\"messageMessage\">${text}</p>`;\n                document.getElementById('showmessages').innerHTML += messageTemplate;\n              });\n            }\n          }\n        });\n      }\n    };\n\n    this.state = {\n      profile: \"\",\n      currentMessage: \"\"\n    };\n    this.InitialiseUser.bind(this);\n    this.InitialiseUser();\n    document.body.addEventListener(\"keydown\", e => {\n      if (e.keyCode == 13) {\n        //enter key pressed\n        this.sendmessage();\n        this.getmessage();\n      }\n    });\n  }\n\n  InitialiseUser() {\n    let nameFromCookie = decodeURIComponent(document.cookie);\n    nameFromCookie = nameFromCookie.split('=');\n    let username = nameFromCookie[1];\n\n    if (username != '' || username != undefined) {\n      fetch(`http://${hostname}:4000/api/profile?name=${username}`).then(response => response.json()).then(data => {\n        this.setState({\n          profile: data.data[0]\n        });\n        document.getElementById('usersavatarbar').src = `${data.data[0].avatar}`;\n        this.getmessage();\n      });\n    } else {\n      document.location.href = `http://${hostname}:3000/`;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"messagePageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        this.getmessage();\n      },\n      id: \"backbuttonmessages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"img\", {\n      id: \"usersavatarbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"openchatsdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      id: \"messageinput\",\n      placeholder: \"Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"showmessages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/ccw/frontend/src/messages.js"],"names":["React","hostname","window","location","MessagePage","Component","constructor","props","sendmessage","sendto","state","currentMessage","message","document","getElementById","value","fetch","profile","username","then","response","json","data","getmessage","i","length","name","split","text","messageTemplate","avatar","innerHTML","InitialiseUser","bind","body","addEventListener","e","keyCode","nameFromCookie","decodeURIComponent","cookie","undefined","setState","src","href","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CSS/messages.css'\nconst hostname = window.location.hostname;\n\n\nexport class MessagePage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n        profile:\"\",\n        currentMessage:\"\"\n\n    }\n\n    this.InitialiseUser.bind(this);\n    this.InitialiseUser();\n\n    document.body.addEventListener(\"keydown\",(e)=>{\n        if(e.keyCode == 13){\n            //enter key pressed\n            this.sendmessage();\n            this.getmessage();\n        }\n    })\n\n  }\n\n\n  InitialiseUser(){\n\n    let nameFromCookie = decodeURIComponent(document.cookie);\n    nameFromCookie = nameFromCookie.split('=');\n    let username = nameFromCookie[1];\n    if(username != '' || username != undefined){\n        fetch(`http://${hostname}:4000/api/profile?name=${username}`)\n        .then(response => response.json())\n        .then((data)=>{\n            this.setState({ profile : data.data[0]})\n            document.getElementById('usersavatarbar').src=`${data.data[0].avatar}`\n            this.getmessage()\n        })\n    }else{\n        document.location.href=`http://${hostname}:3000/`\n    }\n}\n\n    sendmessage = () => {\n        let sendto = this.state.currentMessage\n        let message = document.getElementById('messageinput').value;\n        if(sendto !== ''){\n            fetch(`http://${hostname}:4000/api/sendmessage?sendto=${sendto}&username=${this.state.profile.username}&message=${message}`)\n            .then(response => response.json())\n            .then((data)=>{\n            })\n        }\n    }\n\n\n  getmessage = () => {\n    let sendto = this.state.currentMessage\n    if(sendto !== \"\"){\n        fetch(`http://${hostname}:4000/api/getmessages?to=${sendto}&username=${this.state.profile.username}`)\n        .then(response => response.json())\n        .then((data)=>{\n            if(data.data != 'false'){\n                for(let i=0;i<data.data.message.length;i++){\n                    let name = data.data.message[i].split(\"℗\")[0]\n                    let text = data.data.message[i].split(\"℗\")[1]\n                    fetch(`http://${hostname}:4000/api/profile?name=${name}`)\n                    .then(response => response.json())\n                    .then((data)=>{\n                        let messageTemplate = `<div id=\"messagecontainer\"><img id=\"messageavatar\"src=\"${data.data[0].avatar}\"/><p class=\"messageName\">${name}</p><p class=\"messageMessage\">${text}</p>`\n                        document.getElementById('showmessages').innerHTML += messageTemplate;\n                    })\n                }\n            }\n        })\n    }\n  }\n\n\n  render(){\n    return(\n      <div className=\"messagePageWrapper\">\n          <button onClick={()=>{this.getmessage()}} id='backbuttonmessages'>Back</button>\n          <img id='usersavatarbar'/>\n          <div id='sidebar'>\n              <div id='openchatsdiv'>\n\n              </div>\n\n          </div>\n\n          <input id='messageinput' placeholder='Message'/>\n\n          <div id='showmessages'>\n\n          </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}