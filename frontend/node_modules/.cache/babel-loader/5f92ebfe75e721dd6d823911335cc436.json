{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/watchou/frontend/src/upload.js\";\nimport React from 'react';\nimport './CSS/upload.css';\nimport axios, { post } from 'axios';\n\nvar cryptoJs = require('crypto-js');\n\nconst hostname = window.location.hostname;\nexport class UploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Init = () => {\n      let token = decodeURIComponent(document.cookie);\n\n      if (token) {\n        token = token.split('=');\n        token = token[1];\n        var message = {\n          token: process.env.REACT_APP_SECRET_TOKEN_CODE,\n          data: token\n        };\n        var cipher = cryptoJs.AES.encrypt(JSON.stringify(message), process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n        cipher = cipher.replace(/[/]/g, '★');\n        cipher = cipher.replace(/[+]/g, '☆');\n        fetch(`http://${hostname}:4000/api/getuser?data=${cipher}`).then(response => response.json()).then(data => {\n          var d = data.data;\n          d = d.replace(/[★]/g, '/');\n          d = d.replace(/[☆]/g, '+');\n          var b = cryptoJs.AES.decrypt(d, process.env.REACT_APP_SECRET_TOKEN_CODE.toString());\n          var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8));\n          this.setState({\n            user: dec.user[0]\n          });\n        });\n      } else {\n        window.location.href = `http://${hostname}:3000/`;\n      }\n    };\n\n    this.video = e => {\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        this.setState({\n          video: e.target.result\n        });\n      };\n    };\n\n    this.thum = e => {\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        this.setState({\n          thum: e.target.result\n        });\n      };\n    };\n\n    this.upload = () => {\n      var title = document.getElementById('titleInput').value;\n      var des = document.getElementById('desInput').value;\n      var tags = document.getElementById('tagsInput').value; //check to see if uploaded file to thum is a valid type\n\n      var thum = document.getElementById('thumInput').value;\n      var thumindex = thum.lastIndexOf('.');\n      var thumext = thum.substring(thumindex, thum.length);\n      var validthum = ['.png', '.jpeg'];\n\n      if (validthum.indexOf(thumext) == -1) {\n        console.log('not the right thum ext');\n        return false;\n      } //check to see if uploaded file to video is a valid type\n\n\n      var video = document.getElementById('videoInput').value;\n      var videoindex = video.lastIndexOf('.');\n      var videoext = video.substring(videoindex, video.length);\n      var validvideo = ['.mp4', '.mov', '.avi'];\n\n      if (validvideo.indexOf(videoext) == -1) {\n        console.log('not the right video ext');\n        return false;\n      }\n\n      console.log('correct');\n\n      if (title && des && tags) {\n        if (this.state.video != '' && this.state.thum != '') {\n          console.log('video and thum entered');\n        } else {\n          console.log('not all have been eneterd');\n        }\n      } else {//throw err not all fields have been entered\n      }\n    };\n\n    this.state = {\n      user: '',\n      video: '',\n      thum: ''\n    };\n    this.Init.bind(this);\n    this.Init();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"uploadPageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Video\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"videoInput\",\n      onChange: e => this.video(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Thum\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"thumInput\",\n      onChange: e => this.thum(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"titleInput\",\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"desInput\",\n      placeholder: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"tagsInput\",\n      placeholder: \"Tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => {\n        this.upload();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Upload\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/watchou/frontend/src/upload.js"],"names":["React","axios","post","cryptoJs","require","hostname","window","location","UploadPage","Component","constructor","props","Init","token","decodeURIComponent","document","cookie","split","message","process","env","REACT_APP_SECRET_TOKEN_CODE","data","cipher","AES","encrypt","JSON","stringify","toString","replace","fetch","then","response","json","d","b","decrypt","dec","parse","enc","Utf8","setState","user","href","video","e","file","target","files","reader","FileReader","readAsDataURL","onload","result","thum","upload","title","getElementById","value","des","tags","thumindex","lastIndexOf","thumext","substring","length","validthum","indexOf","console","log","videoindex","videoext","validvideo","state","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CSS/upload.css'\nimport axios, { post } from 'axios'\nvar cryptoJs = require('crypto-js');\nconst hostname = window.location.hostname;\n\n\nexport class UploadPage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n        user:'',\n        video:'',\n        thum:''\n    }\n\n    this.Init.bind(this);\n    this.Init();\n\n  }\n\n  Init = () => {\n    let token = decodeURIComponent(document.cookie);\n    if(token){\n      token = token.split('=');\n      token = token[1];\n      var message = {token:process.env.REACT_APP_SECRET_TOKEN_CODE,data:token}\n      var cipher = cryptoJs.AES.encrypt(JSON.stringify(message),process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n      cipher = cipher.replace(/[/]/g,'★')\n      cipher = cipher.replace(/[+]/g,'☆')\n      fetch(`http://${hostname}:4000/api/getuser?data=${cipher}`)\n      .then(response => response.json())\n      .then(data => {\n        var d = data.data\n        d = d.replace(/[★]/g,'/')\n        d = d.replace(/[☆]/g,'+')\n        var b = cryptoJs.AES.decrypt(d,process.env.REACT_APP_SECRET_TOKEN_CODE.toString())\n        var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8))\n        this.setState({user : dec.user[0]})\n      })\n    }else{\n        window.location.href = `http://${hostname}:3000/`\n    }\n}\n\n  video = (e) => {\n    var file = e.target.files\n\n    let reader = new FileReader();\n    reader.readAsDataURL(file[0])\n    \n    reader.onload = (e) => {\n        this.setState({video:e.target.result})\n    }\n  }\n\n  thum = (e) => {\n      var file = e.target.files\n\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0])\n\n      reader.onload = (e) => {\n          this.setState({thum:e.target.result})\n      }\n  }\n\n  upload = () => {\n      var title = document.getElementById('titleInput').value\n      var des = document.getElementById('desInput').value\n      var tags = document.getElementById('tagsInput').value\n\n      //check to see if uploaded file to thum is a valid type\n      var thum = document.getElementById('thumInput').value\n      var thumindex = thum.lastIndexOf('.')\n      var thumext = thum.substring(thumindex,thum.length)\n      var validthum = ['.png','.jpeg']\n      if(validthum.indexOf(thumext) == -1)\n      {\n          console.log('not the right thum ext')\n          return false;\n      }\n\n      //check to see if uploaded file to video is a valid type\n      var video = document.getElementById('videoInput').value\n      var videoindex = video.lastIndexOf('.')\n      var videoext = video.substring(videoindex,video.length)\n      var validvideo = ['.mp4','.mov','.avi']\n      if(validvideo.indexOf(videoext) == -1)\n      {\n          console.log('not the right video ext')\n          return false;\n      }\n      console.log('correct')\n\n      if(title && des && tags)\n      {\n        if(this.state.video != '' && this.state.thum != '')\n        {\n            console.log('video and thum entered')\n        }\n        else{\n            console.log('not all have been eneterd')\n        }\n      }\n      else{\n          //throw err not all fields have been entered\n      }\n\n  }\n\n\n  render(){\n    return(\n        <div className=\"uploadPageWrapper\">\n            <h1>Upload</h1>\n            <h1>Video</h1>\n            <input type='file' id='videoInput' onChange={(e)=>this.video(e)}/>\n            <h1>Thum</h1>\n            <input type='file' id='thumInput' onChange={(e)=>this.thum(e)}/>\n            <input id='titleInput' placeholder='Title'/>\n            <input id='desInput' placeholder='Description'/>\n            <input id='tagsInput' placeholder='Tags'/>\n\n            <button onClick={()=>{this.upload()}}>Upload</button>\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}