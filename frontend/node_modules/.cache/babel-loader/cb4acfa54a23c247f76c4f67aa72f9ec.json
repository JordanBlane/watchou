{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/watchou/frontend/src/register.js\";\nimport React from 'react';\nimport './CSS/login.css';\n\nvar cryptoJs = require('crypto-js');\n\nconst hostname = window.location.hostname;\nexport class RegisterPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Init = () => {\n      //if user is logged in redirect\n      let token = decodeURIComponent(document.cookie);\n\n      if (token) {\n        window.location.href = `http://${hostname}:3000/`;\n      }\n    };\n\n    this.register = () => {\n      var email = document.getElementById('emailinput').value;\n      var username = document.getElementById('usernameinput').value;\n      var password = document.getElementById('passwordinput').value;\n      var passwordconfirm = document.getElementById('passwordconfirminput').value;\n      var message = {\n        username: username,\n        email: email,\n        password: password,\n        confirmpassword: passwordconfirm,\n        token: process.env.REACT_APP_SECRET_TOKEN_CODE\n      };\n      var cipher = cryptoJs.AES.encrypt(JSON.stringify(message), process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n      cipher = cipher.replace(/[/]/g, '★');\n      cipher = cipher.replace(/[+]/g, '☆');\n      fetch(`http://${hostname}:4000/api/register?data=${cipher}`).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.state = {};\n    this.Init.bind(this);\n    this.Init();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"loginPageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"registerEmailDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"regTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"input\", {\n      className: \"registerInputs\",\n      id: \"emailinput\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"regButton\",\n      onClick: () => {\n        this.register();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Next\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/watchou/frontend/src/register.js"],"names":["React","cryptoJs","require","hostname","window","location","RegisterPage","Component","constructor","props","Init","token","decodeURIComponent","document","cookie","href","register","email","getElementById","value","username","password","passwordconfirm","message","confirmpassword","process","env","REACT_APP_SECRET_TOKEN_CODE","cipher","AES","encrypt","JSON","stringify","toString","replace","fetch","then","response","json","data","console","log","state","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC;AAGA,OAAO,MAAMG,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAEhDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAYlBC,IAZkB,GAYX,MAAM;AACX;AACA,UAAIC,KAAK,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAV,CAA9B;;AACA,UAAGH,KAAH,EAAS;AACPP,QAAAA,MAAM,CAACC,QAAP,CAAgBU,IAAhB,GAAwB,UAASZ,QAAS,QAA1C;AACD;AACF,KAlBiB;;AAAA,SAoBlBa,QApBkB,GAoBP,MAAM;AACf,UAAIC,KAAK,GAAGJ,QAAQ,CAACK,cAAT,CAAwB,YAAxB,EAAsCC,KAAlD;AACA,UAAIC,QAAQ,GAAGP,QAAQ,CAACK,cAAT,CAAwB,eAAxB,EAAyCC,KAAxD;AACA,UAAIE,QAAQ,GAAGR,QAAQ,CAACK,cAAT,CAAwB,eAAxB,EAAyCC,KAAxD;AACA,UAAIG,eAAe,GAAIT,QAAQ,CAACK,cAAT,CAAwB,sBAAxB,EAAgDC,KAAvE;AACA,UAAII,OAAO,GAAG;AAACH,QAAAA,QAAQ,EAACA,QAAV;AAAmBH,QAAAA,KAAK,EAACA,KAAzB;AAA+BI,QAAAA,QAAQ,EAACA,QAAxC;AAAiDG,QAAAA,eAAe,EAACF,eAAjE;AAAiFX,QAAAA,KAAK,EAACc,OAAO,CAACC,GAAR,CAAYC;AAAnG,OAAd;AACA,UAAIC,MAAM,GAAG3B,QAAQ,CAAC4B,GAAT,CAAaC,OAAb,CAAqBC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAArB,EAA6CE,OAAO,CAACC,GAAR,CAAYC,2BAAzD,EAAsFM,QAAtF,EAAb;AACAL,MAAAA,MAAM,GAAGA,MAAM,CAACM,OAAP,CAAe,MAAf,EAAsB,GAAtB,CAAT;AACAN,MAAAA,MAAM,GAAGA,MAAM,CAACM,OAAP,CAAe,MAAf,EAAsB,GAAtB,CAAT;AACAC,MAAAA,KAAK,CAAE,UAAShC,QAAS,2BAA0ByB,MAAO,EAArD,CAAL,CACCQ,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OAJD;AAKD,KAlCiB;;AAGhB,SAAKG,KAAL,GAAW,EAAX;AAGA,SAAKhC,IAAL,CAAUiC,IAAV,CAAe,IAAf;AACA,SAAKjC,IAAL;AAED;;AA4BDkC,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAkC,MAAA,EAAE,EAAC,YAArC;AAAkD,MAAA,WAAW,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE,MAAI;AAAC,aAAK5B,QAAL;AAAgB,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADJ,CADJ;AASD;;AAjD+C","sourcesContent":["import React from 'react';\nimport './CSS/login.css'\nvar cryptoJs = require('crypto-js');\nconst hostname = window.location.hostname;\n\n\nexport class RegisterPage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n    }\n\n    this.Init.bind(this);\n    this.Init();\n\n  }\n\n\n  Init = () => {\n    //if user is logged in redirect\n    let token = decodeURIComponent(document.cookie);\n    if(token){\n      window.location.href = `http://${hostname}:3000/`\n    }\n  }\n\n  register = () => {\n    var email = document.getElementById('emailinput').value\n    var username = document.getElementById('usernameinput').value\n    var password = document.getElementById('passwordinput').value\n    var passwordconfirm  = document.getElementById('passwordconfirminput').value\n    var message = {username:username,email:email,password:password,confirmpassword:passwordconfirm,token:process.env.REACT_APP_SECRET_TOKEN_CODE}\n    var cipher = cryptoJs.AES.encrypt(JSON.stringify(message),process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n    cipher = cipher.replace(/[/]/g,'★')\n    cipher = cipher.replace(/[+]/g,'☆')\n    fetch(`http://${hostname}:4000/api/register?data=${cipher}`)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n    })\n  }\n\n\n  render(){\n    return(\n        <div className=\"loginPageWrapper\">\n            <div className=\"registerEmailDiv\">\n              <h1 className=\"regTitle\">Register</h1>\n              <input className=\"registerInputs\" id='emailinput' placeholder='Email'/>\n              <button className=\"regButton\" onClick={()=>{this.register()}}>Next</button>\n            </div>\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}