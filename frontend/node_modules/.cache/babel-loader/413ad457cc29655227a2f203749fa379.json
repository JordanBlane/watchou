{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/watchou/frontend/src/upload.js\";\nimport React from 'react';\nimport './CSS/upload.css';\nimport axios, { post } from 'axios';\n\nvar cryptoJs = require('crypto-js');\n\nconst hostname = window.location.hostname;\nexport class UploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Init = () => {\n      let token = decodeURIComponent(document.cookie);\n\n      if (token) {\n        token = token.split('=');\n        token = token[1];\n        var message = {\n          token: process.env.REACT_APP_SECRET_TOKEN_CODE,\n          data: token\n        };\n        var cipher = cryptoJs.AES.encrypt(JSON.stringify(message), process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n        cipher = cipher.replace(/[/]/g, '★');\n        cipher = cipher.replace(/[+]/g, '☆');\n        fetch(`http://${hostname}:4000/api/getuser?data=${cipher}`).then(response => response.json()).then(data => {\n          var d = data.data;\n          d = d.replace(/[★]/g, '/');\n          d = d.replace(/[☆]/g, '+');\n          var b = cryptoJs.AES.decrypt(d, process.env.REACT_APP_SECRET_TOKEN_CODE.toString());\n          var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8));\n          this.setState({\n            user: dec.user[0]\n          });\n        });\n      } else {\n        window.location.href = `http://${hostname}/`;\n      }\n    };\n\n    this.handleEventVideo = event => {\n      var percentage = Math.round(event.loaded / event.total * 100);\n      console.log(`${event.type} : ${percentage} bytes transfered`);\n    };\n\n    this.video = e => {\n      var acceptedTypes = ['mp4', 'avi', 'mov', 'mkv'];\n\n      if (acceptedTypes.indexOf(e.target.files[0].type.split('/').pop()) == -1) {\n        return console.log('not accepted');\n      }\n\n      console.log('aa');\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.addEventListener('progress', this.handleEventVideo);\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        this.setState({\n          video: e.target.result\n        });\n        document.getElementById('aboutVideoDiv').style.display = 'block';\n        document.getElementById('uploadFileDiv').style.display = 'none';\n      };\n    };\n\n    this.thum = e => {\n      var acceptedTypes = ['jpeg', 'png'];\n\n      if (acceptedTypes.indexOf(e.target.files[0].type.split('/').pop()) == -1) {\n        return console.log('not accepted wrong file type');\n      }\n\n      console.log('aa');\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        this.setState({\n          thum: e.target.result\n        });\n      };\n    };\n\n    this.upload = () => {\n      var title = document.getElementById('titleInput').value;\n      var des = document.getElementById('desInput').value;\n      var tags = document.getElementById('tagsInput').value;\n\n      if (title && des && tags) {\n        if (this.state.video != '' && this.state.thum != '') {\n          //SEND REQUEST\n          var formData = {\n            videoname: title,\n            videodes: des,\n            channel: this.state.user.token,\n            tags: tags\n          };\n          var message = {\n            data: formData,\n            token: process.env.REACT_APP_SECRET_TOKEN_CODE\n          };\n          var cipher = cryptoJs.AES.encrypt(JSON.stringify(message), process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n          cipher = cipher.replace(/[/]/g, '★');\n          cipher = cipher.replace(/[+]/g, '☆');\n          var obj = {\n            file: this.state.video,\n            thum: this.state.thum,\n            cipher\n          };\n          const url = `http://${hostname}:4000/api/upload`;\n          console.log('a');\n          return post(url, obj).then(response => {\n            if (response.status == 200) {\n              console.log('a');\n              window.location.href = `http://${hostname}/`;\n            } else {\n              //show upload error\n              console.log('show error');\n            }\n          });\n        } else {\n          console.log('not all have been eneterd');\n        }\n      } else {//throw err not all fields have been entered\n      }\n    };\n\n    this.state = {\n      user: '',\n      video: '',\n      thum: ''\n    };\n    this.Init.bind(this);\n    this.Init();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"uploadPageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"uploadFileDiv\",\n      id: \"uploadFileDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"videoAboutTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"input\", {\n      className: \"fileButton\",\n      name: \"videoInput\",\n      type: \"file\",\n      id: \"videoInput\",\n      onChange: e => this.video(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"videoInput\",\n      className: \"videoInputButton\",\n      id: \"videoInputButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"videoInputButtonText\",\n      id: \"videoInputButtonText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Select File\"))), React.createElement(\"div\", {\n      className: \"aboutVideoDiv\",\n      id: \"aboutVideoDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"thumbButton\",\n      type: \"file\",\n      id: \"thumInput\",\n      placeholder: \"Thumbnail\",\n      onChange: e => this.thum(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"titleInput\",\n      id: \"titleInput\",\n      placeholder: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"desInput\",\n      id: \"desInput\",\n      placeholder: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"tagsInput\",\n      id: \"tagsInput\",\n      placeholder: \"Tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"uploadBtn\",\n      onClick: () => {\n        this.upload();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Upload\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/watchou/frontend/src/upload.js"],"names":["React","axios","post","cryptoJs","require","hostname","window","location","UploadPage","Component","constructor","props","Init","token","decodeURIComponent","document","cookie","split","message","process","env","REACT_APP_SECRET_TOKEN_CODE","data","cipher","AES","encrypt","JSON","stringify","toString","replace","fetch","then","response","json","d","b","decrypt","dec","parse","enc","Utf8","setState","user","href","handleEventVideo","event","percentage","Math","round","loaded","total","console","log","type","video","e","acceptedTypes","indexOf","target","files","pop","file","reader","FileReader","addEventListener","readAsDataURL","onload","result","getElementById","style","display","thum","upload","title","value","des","tags","state","formData","videoname","videodes","channel","obj","url","status","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CSS/upload.css'\nimport axios, { post } from 'axios'\nvar cryptoJs = require('crypto-js');\nconst hostname = window.location.hostname;\n\n\nexport class UploadPage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n        user:'',\n        video:'',\n        thum:''\n    }\n\n    this.Init.bind(this);\n    this.Init();\n\n  }\n\n  Init = () => {\n    let token = decodeURIComponent(document.cookie);\n    if(token){\n      token = token.split('=');\n      token = token[1];\n      var message = {token:process.env.REACT_APP_SECRET_TOKEN_CODE,data:token}\n      var cipher = cryptoJs.AES.encrypt(JSON.stringify(message),process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n      cipher = cipher.replace(/[/]/g,'★')\n      cipher = cipher.replace(/[+]/g,'☆')\n      fetch(`http://${hostname}:4000/api/getuser?data=${cipher}`)\n      .then(response => response.json())\n      .then(data => {\n        var d = data.data\n        d = d.replace(/[★]/g,'/')\n        d = d.replace(/[☆]/g,'+')\n        var b = cryptoJs.AES.decrypt(d,process.env.REACT_APP_SECRET_TOKEN_CODE.toString())\n        var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8))\n        this.setState({user : dec.user[0]})\n      })\n    }else{\n        window.location.href = `http://${hostname}/`\n    }\n}\n\nhandleEventVideo = (event) => {\n    var percentage = Math.round((event.loaded / event.total) * 100)\n    console.log(`${event.type} : ${percentage} bytes transfered`)\n}\n\n  video = (e) => {\n    var acceptedTypes = ['mp4','avi','mov','mkv']\n    if(acceptedTypes.indexOf(e.target.files[0].type.split('/').pop()) == -1)\n    {\n      return console.log('not accepted')\n    }\n    console.log('aa')\n    var file = e.target.files\n\n    let reader = new FileReader();\n    reader.addEventListener('progress', this.handleEventVideo);\n    reader.readAsDataURL(file[0])\n    \n    reader.onload = (e) => {\n        this.setState({video:e.target.result})\n        document.getElementById('aboutVideoDiv').style.display = 'block'\n        document.getElementById('uploadFileDiv').style.display = 'none'\n    }\n  }\n\n\n  thum = (e) => {\n    var acceptedTypes = ['jpeg','png']\n    if(acceptedTypes.indexOf(e.target.files[0].type.split('/').pop()) == -1)\n    {\n      return console.log('not accepted wrong file type')\n    }\n    console.log('aa')\n    var file = e.target.files\n\n    let reader = new FileReader();\n    reader.readAsDataURL(file[0])\n\n    reader.onload = (e) => {\n        this.setState({thum:e.target.result})\n    }\n  }\n\n  upload = () => {\n      var title = document.getElementById('titleInput').value\n      var des = document.getElementById('desInput').value\n      var tags = document.getElementById('tagsInput').value\n      if(title && des && tags)\n      {\n        if(this.state.video != '' && this.state.thum != '')\n        {\n            //SEND REQUEST\n            var formData = {videoname:title,videodes:des,channel:this.state.user.token,tags:tags}\n            var message = {data:formData,token:process.env.REACT_APP_SECRET_TOKEN_CODE}\n            var cipher = cryptoJs.AES.encrypt(JSON.stringify(message),process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n            cipher = cipher.replace(/[/]/g,'★')\n            cipher = cipher.replace(/[+]/g,'☆')\n            var obj = {file:this.state.video,thum:this.state.thum,cipher}\n            const url = `http://${hostname}:4000/api/upload`\n\n            console.log('a')\n\n            return post(url,obj)\n            .then(response => {\n                if(response.status == 200)\n                {\n                    console.log('a')\n                    window.location.href = `http://${hostname}/`\n                }\n                else{\n                    //show upload error\n                    console.log('show error')\n                }\n            })\n\n        }\n        else{\n            console.log('not all have been eneterd')\n        }\n      }\n      else{\n          //throw err not all fields have been entered\n      }\n\n  }\n\n\n  render(){\n    return(\n        <div className=\"uploadPageWrapper\">\n            <div className=\"uploadFileDiv\" id='uploadFileDiv'>\n                <h1 className=\"videoAboutTitle\">Upload</h1>\n                <input className=\"fileButton\" name=\"videoInput\" type='file' id='videoInput' onChange={(e)=>this.video(e)}/>\n                <label for=\"videoInput\" className=\"videoInputButton\" id=\"videoInputButton\"><span className=\"videoInputButtonText\" id=\"videoInputButtonText\">Select File</span></label>\n            </div>\n            <div className=\"aboutVideoDiv\" id='aboutVideoDiv'>\n                <input className=\"thumbButton\" type='file' id='thumInput' placeholder=\"Thumbnail\" onChange={(e)=>this.thum(e)}/>\n                <input className=\"titleInput\" id='titleInput' placeholder='Title'/>\n                <input className=\"desInput\" id='desInput' placeholder='Description'/>\n                <input className=\"tagsInput\" id='tagsInput' placeholder='Tags'/>\n\n                <button className=\"uploadBtn\" onClick={()=>{this.upload()}}>Upload</button>\n            </div>\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}