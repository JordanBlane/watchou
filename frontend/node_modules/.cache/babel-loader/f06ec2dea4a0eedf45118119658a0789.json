{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/watchou/frontend/src/upload.js\";\nimport React from 'react';\nimport './CSS/upload.css';\nimport axios, { post } from 'axios';\n\nvar cryptoJs = require('crypto-js');\n\nconst hostname = window.location.hostname;\nexport class UploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.video = e => {\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        this.setState({\n          video: e.target.result\n        });\n      };\n    };\n\n    this.thum = e => {\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        this.setState({\n          thum: e.target.result\n        });\n      };\n    };\n\n    this.state = {\n      video: '',\n      thum: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"uploadPageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"videoInput\",\n      onChange: e => this.video(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"thumInput\",\n      onChange: e => this.thum(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/watchou/frontend/src/upload.js"],"names":["React","axios","post","cryptoJs","require","hostname","window","location","UploadPage","Component","constructor","props","video","e","file","target","files","reader","FileReader","readAsDataURL","onload","setState","result","thum","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC;AAGA,OAAO,MAAMG,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAUlBC,KAVkB,GAUTC,CAAD,IAAO;AACb,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AAEA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBL,IAAI,CAAC,CAAD,CAAzB;;AAEAG,MAAAA,MAAM,CAACG,MAAP,GAAiBP,CAAD,IAAO;AACnB,aAAKQ,QAAL,CAAc;AAACT,UAAAA,KAAK,EAACC,CAAC,CAACE,MAAF,CAASO;AAAhB,SAAd;AACH,OAFD;AAGD,KAnBiB;;AAAA,SAqBlBC,IArBkB,GAqBVV,CAAD,IAAO;AACV,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AAEA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBL,IAAI,CAAC,CAAD,CAAzB;;AAEAG,MAAAA,MAAM,CAACG,MAAP,GAAiBP,CAAD,IAAO;AACnB,aAAKQ,QAAL,CAAc;AAACE,UAAAA,IAAI,EAACV,CAAC,CAACE,MAAF,CAASO;AAAf,SAAd;AACH,OAFD;AAGH,KA9BiB;;AAGhB,SAAKE,KAAL,GAAW;AACPZ,MAAAA,KAAK,EAAC,EADC;AAEPW,MAAAA,IAAI,EAAC;AAFE,KAAX;AAKD;;AAyBDE,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,YAAtB;AAAmC,MAAA,QAAQ,EAAGZ,CAAD,IAAK,KAAKD,KAAL,CAAWC,CAAX,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAGA,CAAD,IAAK,KAAKU,IAAL,CAAUV,CAAV,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOD;;AA3C6C","sourcesContent":["import React from 'react';\nimport './CSS/upload.css'\nimport axios, { post } from 'axios'\nvar cryptoJs = require('crypto-js');\nconst hostname = window.location.hostname;\n\n\nexport class UploadPage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n        video:'',\n        thum:''\n    }\n\n  }\n\n  video = (e) => {\n    var file = e.target.files\n\n    let reader = new FileReader();\n    reader.readAsDataURL(file[0])\n    \n    reader.onload = (e) => {\n        this.setState({video:e.target.result})\n    }\n  }\n\n  thum = (e) => {\n      var file = e.target.files\n\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0])\n\n      reader.onload = (e) => {\n          this.setState({thum:e.target.result})\n      }\n  }\n\n\n  render(){\n    return(\n        <div className=\"uploadPageWrapper\">\n            <h1>Upload</h1>\n            <input type='file' id='videoInput' onChange={(e)=>this.video(e)}/>\n            <input type='file' id='thumInput' onChange={(e)=>this.thum(e)}/>\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}