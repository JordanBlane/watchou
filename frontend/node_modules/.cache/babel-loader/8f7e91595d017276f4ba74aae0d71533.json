{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/ccw/frontend/src/profile.js\";\nimport React from 'react';\nimport './CSS/profile.css';\nconst hostname = window.location.hostname;\nexport class ProfilePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCompleted = () => {\n      fetch(`http://${hostname}:4000/api/getcompleted?uid=${this.state.profile.id}`).then(response => response.json()).then(data => {\n        for (let i = 0; i < data.data.length; i++) {\n          fetch(`http://${hostname}:4000/api/getquestions?id=${data.data[i].challengeid}`).then(response => response.json()).then(data => {\n            console.log(data);\n            document.getElementById('showchallenges').innerHTML += '<div id=\"challengeDiv\"> <h4 id=\"challengeTitle\">' + data.data[0].question + '</h4> <p id=\"challengeLanguage\">' + data.data[0].language + '</p></div>';\n          });\n        }\n      });\n    };\n\n    this.state = {\n      profile: \"\"\n    };\n    this.InitialiseUser.bind(this);\n    this.InitialiseUser();\n  }\n\n  InitialiseUser() {\n    let nameFromCookie = decodeURIComponent(document.cookie);\n    nameFromCookie = nameFromCookie.split('=');\n    let username = nameFromCookie[1];\n\n    if (username != '' || username != undefined) {\n      fetch(`http://${hostname}:4000/api/profile?name=${username}`).then(response => response.json()).then(data => {\n        this.setState({\n          profile: data.data[0]\n        });\n        document.getElementById('showavatarprofile').src = `${this.state.profile.avatar}`;\n        this.getCompleted();\n      });\n    } else {\n      return document.location.href = `http://${hostname}:3000/`;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"profilePageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"backprofile\",\n      onClick: () => {\n        document.location.href = `http://${hostname}:3000/main`;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"h2\", {\n      id: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.profile.username), React.createElement(\"img\", {\n      id: \"showavatarprofile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"completedChallenges\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      id: \"completedchallengestitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Completed Challenges\"), React.createElement(\"div\", {\n      id: \"showchallenges\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/ccw/frontend/src/profile.js"],"names":["React","hostname","window","location","ProfilePage","Component","constructor","props","getCompleted","fetch","state","profile","id","then","response","json","data","i","length","challengeid","console","log","document","getElementById","innerHTML","question","language","InitialiseUser","bind","nameFromCookie","decodeURIComponent","cookie","split","username","undefined","setState","src","avatar","href","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CSS/profile.css'\nconst hostname = window.location.hostname;\n\n\n\n\nexport class ProfilePage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n        profile : \"\"\n    }\n\n\n    this.InitialiseUser.bind(this);\n    this.InitialiseUser();\n  }\n  InitialiseUser(){\n\n    let nameFromCookie = decodeURIComponent(document.cookie);\n    nameFromCookie = nameFromCookie.split('=');\n    let username = nameFromCookie[1];\n    if(username != '' || username != undefined){\n        fetch(`http://${hostname}:4000/api/profile?name=${username}`)\n        .then(response => response.json())\n        .then((data)=>{\n            this.setState({ profile : data.data[0]})\n            document.getElementById('showavatarprofile').src=`${this.state.profile.avatar}`\n            this.getCompleted()\n        })\n    }else{\n        return document.location.href=`http://${hostname}:3000/`\n        }\n    }\n\n\n    getCompleted = () => {\n        fetch(`http://${hostname}:4000/api/getcompleted?uid=${this.state.profile.id}`)\n        .then(response => response.json())\n        .then((data)=>{\n            for(let i=0;i<data.data.length;i++){\n                fetch(`http://${hostname}:4000/api/getquestions?id=${data.data[i].challengeid}`)\n                .then(response => response.json())\n                .then((data)=>{\n                    console.log(data)\n                    document.getElementById('showchallenges').innerHTML += '<div id=\"challengeDiv\"> <h4 id=\"challengeTitle\">'+data.data[0].question+'</h4> <p id=\"challengeLanguage\">'+data.data[0].language+'</p></div>'\n                })\n            }\n        })\n    }\n\n  render(){\n    return(\n      <div className=\"profilePageWrapper\">\n          <button id='backprofile' onClick={()=>{document.location.href=`http://${hostname}:3000/main`}}>Back</button>\n          <h2 id='username'>{this.state.profile.username}</h2>\n          <img id='showavatarprofile'/>\n\n          <div className='completedChallenges'>\n            <h4 id='completedchallengestitle'>Completed Challenges</h4>\n            <div id='showchallenges'>\n\n            </div>\n          </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}