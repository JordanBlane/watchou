{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/watchou/frontend/src/watch.js\";\nimport React from 'react';\nimport './CSS/watch.css';\nimport Axios from 'axios';\n\nvar cryptoJs = require('crypto-js');\n\nconst queryString = require('query-string');\n\nconst hostname = window.location.hostname;\nexport class WatchPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.Init = () => {\n      let token = decodeURIComponent(document.cookie);\n\n      if (token) {\n        token = token.split('=');\n        token = token[1];\n        var message = {\n          token: process.env.REACT_APP_SECRET_TOKEN_CODE,\n          data: token\n        };\n        var cipher = cryptoJs.AES.encrypt(JSON.stringify(message), process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n        cipher = cipher.replace(/[/]/g, '★');\n        cipher = cipher.replace(/[+]/g, '☆');\n        fetch(`http://${hostname}:4000/api/getuser?data=${cipher}`).then(response => response.json()).then(data => {\n          var d = data.data;\n          d = d.replace(/[★]/g, '/');\n          d = d.replace(/[☆]/g, '+');\n          var b = cryptoJs.AES.decrypt(d, process.env.REACT_APP_SECRET_TOKEN_CODE.toString());\n          var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8));\n          this.setState({\n            user: dec.user[0]\n          });\n          var query = queryString.parse(window.location.search);\n          console.log(query);\n\n          if (query.video) {\n            var message = {\n              token: process.env.REACT_APP_SECRET_TOKEN_CODE,\n              uid: query.video\n            };\n            var cipher = cryptoJs.AES.encrypt(JSON.stringify(message), process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n            cipher = cipher.replace(/[/]/g, '★');\n            cipher = cipher.replace(/[+]/g, '☆');\n            Axios.get(`http://${hostname}:4000/api/getvideobyuid?data=${cipher}`).then(response => {\n              var d = response.data.data.data;\n              d = d.replace(/[★]/g, '/');\n              d = d.replace(/[☆]/g, '+');\n              var b = cryptoJs.AES.decrypt(d, process.env.REACT_APP_SECRET_TOKEN_CODE.toString());\n              var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8));\n              console.log(dec.data[0]); //console.log(response.data.data.video)\n\n              document.getElementById('videoSource').src = `data:video/${dec.data[0].videoext};base64,${response.data.data.video}`;\n              document.getElementById('videoPlayer').play();\n            });\n          } else {//ERROR NO VIDEO PICKED\n          }\n        });\n      }\n    };\n\n    this.loadvideo = () => {};\n\n    this.state = {\n      user: ''\n    };\n    this.Init.bind(this);\n    this.Init();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"watchWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"videoTIile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"video\", {\n      id: \"videoPlayer\",\n      autoplay: true,\n      controls: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      id: \"videoSource\",\n      autoplay: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/watchou/frontend/src/watch.js"],"names":["React","Axios","cryptoJs","require","queryString","hostname","window","location","WatchPage","Component","constructor","props","Init","token","decodeURIComponent","document","cookie","split","message","process","env","REACT_APP_SECRET_TOKEN_CODE","data","cipher","AES","encrypt","JSON","stringify","toString","replace","fetch","then","response","json","d","b","decrypt","dec","parse","enc","Utf8","setState","user","query","search","console","log","video","uid","get","getElementById","src","videoext","play","loadvideo","state","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CSS/watch.css'\nimport Axios from 'axios';\nvar cryptoJs = require('crypto-js');\nconst queryString = require('query-string');\nconst hostname = window.location.hostname;\n\n\nexport class WatchPage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n      user:''\n    }\n\n    this.Init.bind(this)\n    this.Init()\n\n  }\n  Init = () => {\n    let token = decodeURIComponent(document.cookie);\n    if(token){\n      token = token.split('=');\n      token = token[1];\n      var message = {token:process.env.REACT_APP_SECRET_TOKEN_CODE,data:token}\n      var cipher = cryptoJs.AES.encrypt(JSON.stringify(message),process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n      cipher = cipher.replace(/[/]/g,'★')\n      cipher = cipher.replace(/[+]/g,'☆')\n      fetch(`http://${hostname}:4000/api/getuser?data=${cipher}`)\n      .then(response => response.json())\n      .then(data => {\n        var d = data.data\n        d = d.replace(/[★]/g,'/')\n        d = d.replace(/[☆]/g,'+')\n        var b = cryptoJs.AES.decrypt(d,process.env.REACT_APP_SECRET_TOKEN_CODE.toString())\n        var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8))\n        this.setState({user : dec.user[0]})\n        var query = queryString.parse(window.location.search);\n        console.log(query)\n        if(query.video)\n        {\n          var message = {token:process.env.REACT_APP_SECRET_TOKEN_CODE,uid:query.video}\n          var cipher = cryptoJs.AES.encrypt(JSON.stringify(message),process.env.REACT_APP_SECRET_TOKEN_CODE).toString();\n          cipher = cipher.replace(/[/]/g,'★')\n          cipher = cipher.replace(/[+]/g,'☆')\n          Axios.get(`http://${hostname}:4000/api/getvideobyuid?data=${cipher}`)\n          .then(response => {\n            var d = response.data.data.data\n            d = d.replace(/[★]/g,'/')\n            d = d.replace(/[☆]/g,'+')\n            var b = cryptoJs.AES.decrypt(d,process.env.REACT_APP_SECRET_TOKEN_CODE.toString())\n            var dec = JSON.parse(b.toString(cryptoJs.enc.Utf8))\n            console.log(dec.data[0])\n            //console.log(response.data.data.video)\n            document.getElementById('videoSource').src = `data:video/${dec.data[0].videoext};base64,${response.data.data.video}`\n            document.getElementById('videoPlayer').play()\n          })\n        }\n        else{\n          //ERROR NO VIDEO PICKED\n        }\n      })\n    }\n  }\n\n\n  loadvideo = () => {\n\n  }\n\n  render(){\n    return(\n    <div className=\"watchWrapper\">\n      <h1 id='videoTIile'></h1>\n      <video id='videoPlayer' autoplay controls>\n        <source id='videoSource' autoplay></source>\n        </video>\n    </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}