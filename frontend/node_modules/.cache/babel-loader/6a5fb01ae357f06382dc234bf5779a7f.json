{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/watchou/frontend/src/upload.js\";\nimport React from 'react';\nimport './CSS/upload.css';\nimport axios, { post } from 'axios';\n\nvar cryptoJs = require('crypto-js');\n\nconst hostname = window.location.hostname;\nexport class UploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.upload = e => {\n      var file = e.target.files;\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0]);\n\n      reader.onload = e => {\n        const url = `http://${hostname}:4000/api/upload`;\n        const formData = {\n          file: e.target.result\n        }; //   return post(url,formData)\n        //   .then(response => console.warn('response: ', response))\n\n        fetch(`http://${hostname}:4000/api/upload`, {\n          method: 'post',\n          body: JSON.stringify({\n            data: e.target.result\n          })\n        }).then(response => response.json()).then(data => {\n          console.log(data);\n        });\n      };\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"uploadPageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"fileInput\",\n      onChange: e => this.upload(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/watchou/frontend/src/upload.js"],"names":["React","axios","post","cryptoJs","require","hostname","window","location","UploadPage","Component","constructor","props","upload","e","file","target","files","reader","FileReader","readAsDataURL","onload","url","formData","result","fetch","method","body","JSON","stringify","data","then","response","json","console","log","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAAjC;AAGA,OAAO,MAAMG,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAQlBC,MARkB,GAQRC,CAAD,IAAO;AACZ,UAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;AAEA,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBL,IAAI,CAAC,CAAD,CAAzB;;AAEAG,MAAAA,MAAM,CAACG,MAAP,GAAiBP,CAAD,IAAO;AACnB,cAAMQ,GAAG,GAAI,UAAShB,QAAS,kBAA/B;AACA,cAAMiB,QAAQ,GAAG;AAACR,UAAAA,IAAI,EAACD,CAAC,CAACE,MAAF,CAASQ;AAAf,SAAjB,CAFmB,CAIrB;AACA;;AACAC,QAAAA,KAAK,CAAE,UAASnB,QAAS,kBAApB,EAAsC;AACvCoB,UAAAA,MAAM,EAAC,MADgC;AAEvCC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,IAAI,EAAGhB,CAAC,CAACE,MAAF,CAASQ;AAAjB,WAAf;AAFiC,SAAtC,CAAL,CAICO,IAJD,CAIMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJlB,EAKCF,IALD,CAKMD,IAAI,IAAI;AACVI,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH,SAPD;AAQD,OAdD;AAeH,KA7BiB;;AAGhB,SAAKM,KAAL,GAAW,EAAX;AAGD;;AA0BDC,EAAAA,MAAM,GAAE;AACN,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAGvB,CAAD,IAAK,KAAKD,MAAL,CAAYC,CAAZ,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMD;;AAzC6C","sourcesContent":["import React from 'react';\nimport './CSS/upload.css'\nimport axios, { post } from 'axios'\nvar cryptoJs = require('crypto-js');\nconst hostname = window.location.hostname;\n\n\nexport class UploadPage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n    }\n\n  }\n\n  upload = (e) => {\n      var file = e.target.files\n\n      let reader = new FileReader();\n      reader.readAsDataURL(file[0])\n\n      reader.onload = (e) => {\n          const url = `http://${hostname}:4000/api/upload`\n          const formData = {file:e.target.result}\n\n        //   return post(url,formData)\n        //   .then(response => console.warn('response: ', response))\n        fetch(`http://${hostname}:4000/api/upload`,{\n            method:'post',\n            body: JSON.stringify({data : e.target.result})\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data)\n        })\n      }\n  }\n\n\n  render(){\n    return(\n        <div className=\"uploadPageWrapper\">\n            <h1>Upload</h1>\n            <input type='file' id='fileInput' onChange={(e)=>this.upload(e)}/>\n        </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}