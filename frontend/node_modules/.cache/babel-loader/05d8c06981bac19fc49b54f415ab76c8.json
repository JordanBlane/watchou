{"ast":null,"code":"var _jsxFileName = \"/Users/jordanblane/Desktop/ccw/frontend/src/challenge.js\";\nimport React from 'react';\nimport queryString from 'query-string';\nimport './CSS/Challenge.css';\nconst hostname = window.location.hostname;\nexport class ChallengePage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.execute = () => {\n      var code = document.getElementById('challengeinput').value;\n      var solution = this.state.challenge.solution;\n      code = code.replace('++', '℗℗');\n      code = code.replace('+', '℗');\n      fetch(`http://localhost:4000/api/runnode?code=${code}&solution=${solution}`).then(response => response.json()).then(data => {\n        var console_ = document.getElementById('consoleview');\n        var date = new Date();\n        console_.innerHTML += '<div id=\"consoletext\">' + date.getHours() + ':' + date.getMinutes() + ' - ' + data.data + '</div>';\n\n        if (data.status == 'true') {\n          if (this.state.completed == 'false') {\n            var completediv = document.getElementById('completediv').style.display = 'block';\n            fetch(`http://localhost:4000/api/addpoints?amount=${this.state.challenge.points}&name=${this.state.profile.username}`).then(response => response.json()).then(data => {\n              console.log(data);\n            });\n            fetch(`http://localhost:4000/api/addcomplete?uid=${this.state.profile.id}&cid=${this.state.challenge.id}`).then(response => response.json()).then(data => {\n              console.log(data);\n            });\n          }\n        }\n      });\n    };\n\n    this.state = {\n      profile: \"\",\n      challenge: \"\",\n      completed: \"\"\n    };\n    setTimeout(() => {\n      console.log(this.state.profile);\n      fetch(`http://${hostname}:4000/api/checkcompleted?uid=${this.state.profile.id}&cid=${this.state.challenge.id}`).then(response => response.json()).then(data => {\n        if (data.data[0]) {\n          this.setState({\n            completed: 'true'\n          });\n          console.log('true');\n          document.getElementById('challengename').innerText += '         ✓';\n        } else {\n          this.setState({\n            completed: 'false'\n          });\n          console.log('false');\n        }\n      });\n    }, 90);\n    this.InitialiseUser.bind(this);\n    this.InitialiseUser();\n  }\n\n  InitialiseUser() {\n    let nameFromCookie = decodeURIComponent(document.cookie);\n    nameFromCookie = nameFromCookie.split('=');\n    let username = nameFromCookie[1];\n\n    if (username != '' || username != undefined) {\n      fetch(`http://${hostname}:4000/api/profile?name=${username}`).then(response => response.json()).then(data => {\n        this.setState({\n          profile: data.data[0]\n        });\n      });\n    } else {\n      return document.location.href = 'http://localhost:3000/';\n    }\n\n    const values = queryString.parse(this.props.location.search);\n    fetch(`http://localhost:4000/api/getquestions?id=${values.id}`).then(response => response.json()).then(data => {\n      this.setState({\n        challenge: data.data[0]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"challengePageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"backbutton\",\n      type: \"submit\",\n      onClick: () => {\n        document.location.href = 'http://localhost:3000/main';\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Back\"), React.createElement(\"div\", {\n      className: \"topbardiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"settingsbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"settings\"), React.createElement(\"button\", {\n      id: \"profilebutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"profile\"), React.createElement(\"h4\", {\n      id: \"userslevel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.profile.level), React.createElement(\"h4\", {\n      id: \"userspoints\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"points: \", this.state.profile.points))), React.createElement(\"div\", {\n      className: \"challengediv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      id: \"challengename\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.challenge.name), React.createElement(\"p\", {\n      id: \"challengedescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.challenge.description), React.createElement(\"textarea\", {\n      id: \"challengeinput\",\n      placeholder: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"executebutton\",\n      onClick: this.execute.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Execute\"), React.createElement(\"div\", {\n      id: \"consoleview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"completediv\",\n      id: \"completediv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"completetitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"WellDone\"), React.createElement(\"p\", {\n      id: \"completedescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"You Got \", this.state.challenge.points, \" points\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/jordanblane/Desktop/ccw/frontend/src/challenge.js"],"names":["React","queryString","hostname","window","location","ChallengePage","Component","constructor","props","execute","code","document","getElementById","value","solution","state","challenge","replace","fetch","then","response","json","data","console_","date","Date","innerHTML","getHours","getMinutes","status","completed","completediv","style","display","points","profile","username","console","log","id","setTimeout","setState","innerText","InitialiseUser","bind","nameFromCookie","decodeURIComponent","cookie","split","undefined","href","values","parse","search","render","level","name","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport queryString from 'query-string';\nimport './CSS/Challenge.css'\nconst hostname = window.location.hostname;\n\n\nexport class ChallengePage extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n        profile: \"\",\n        challenge: \"\",\n        completed:\"\"\n    }\n\n    setTimeout(()=>{\n        console.log(this.state.profile)\n        fetch(`http://${hostname}:4000/api/checkcompleted?uid=${this.state.profile.id}&cid=${this.state.challenge.id}`)\n        .then(response => response.json())\n        .then((data)=>{\n          if(data.data[0]){\n            this.setState({completed : 'true'})\n            console.log('true')\n            document.getElementById('challengename').innerText += '         ✓'\n          }else{\n            this.setState({completed : 'false'})\n            console.log('false')\n          }\n        })\n    },90)\n\n    this.InitialiseUser.bind(this);\n    this.InitialiseUser();\n    \n  }\n\n  InitialiseUser(){\n\n    let nameFromCookie = decodeURIComponent(document.cookie);\n    nameFromCookie = nameFromCookie.split('=');\n    let username = nameFromCookie[1];\n    if(username != '' || username != undefined){\n        fetch(`http://${hostname}:4000/api/profile?name=${username}`)\n        .then(response => response.json())\n        .then((data)=>{\n            this.setState({ profile : data.data[0]})\n        })\n    }else{\n      return document.location.href='http://localhost:3000/'\n    }\n    const values = queryString.parse(this.props.location.search)\n    fetch(`http://localhost:4000/api/getquestions?id=${values.id}`)\n    .then(response => response.json())\n    .then((data)=>{\n        this.setState({ challenge : data.data[0]})\n    })\n}\n\nexecute = () => {\n\n  var code = document.getElementById('challengeinput').value\n  var solution = this.state.challenge.solution\n\n  code = code.replace('++','℗℗');\n  code = code.replace('+','℗');\n\n  fetch(`http://localhost:4000/api/runnode?code=${code}&solution=${solution}`)\n  .then(response => response.json())\n  .then((data)=>{\n    var console_ = document.getElementById('consoleview')\n    var date = new Date();\n\n    console_.innerHTML += '<div id=\"consoletext\">' +date.getHours() +':' +date.getMinutes()+' - ' +  data.data +'</div>'\n    if(data.status == 'true'){\n      if(this.state.completed == 'false'){\n        var completediv = document.getElementById('completediv').style.display = 'block'\n        fetch(`http://localhost:4000/api/addpoints?amount=${this.state.challenge.points}&name=${this.state.profile.username}`)\n        .then(response => response.json())\n        .then((data)=>{\n          console.log(data)\n        })\n        fetch(`http://localhost:4000/api/addcomplete?uid=${this.state.profile.id}&cid=${this.state.challenge.id}`)\n        .then(response => response.json())\n        .then((data)=>{\n          console.log(data)\n        })\n      }\n    }\n  })\n}\n\n  render(){\n    return(\n      <div className=\"challengePageWrapper\">\n          <div className = \"topBar\">\n          <button id='backbutton' type='submit' onClick={() => {document.location.href = 'http://localhost:3000/main'}}>Back</button>\n          <div className=\"topbardiv\">\n                <button id='settingsbutton'>settings</button>\n                <button id='profilebutton'>profile</button>\n                <h4 id='userslevel'>{this.state.profile.level}</h4>\n                <h4 id='userspoints'>points: {this.state.profile.points}</h4>\n            </div>\n          </div>\n          <div className=\"challengediv\">\n            <h4 id='challengename'>{this.state.challenge.name}</h4>\n            <p id='challengedescription'>{this.state.challenge.description}</p>\n\n            <textarea id=\"challengeinput\" placeholder=\"code\"/>\n            <button id='executebutton' onClick={this.execute.bind(this)}>Execute</button>\n            <div id='consoleview'>\n            </div>\n          </div>\n\n          <div className='completediv' id='completediv'>\n            <h2 id='completetitle'>WellDone</h2>\n\n            <p id='completedescription'>You Got {this.state.challenge.points} points</p>\n          </div>\n\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}